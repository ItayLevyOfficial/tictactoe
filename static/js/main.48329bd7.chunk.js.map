{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","current","length","winner","calculateWinner","moves","map","_","move","descreption","key","jumpTo","status","handleClick","slice","setState","step","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"6OAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKPC,E,qLACSC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMtC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BTC,IAAMC,WAiCpBC,E,YACJ,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXC,QAAS,CACP,CACEN,QAASO,MAAM,GAAGC,KAAK,QAG3BC,SAAS,EACTC,WAAY,GATG,E,sEAaT,IAAD,OACDJ,EAAUP,KAAKM,MAAMC,QACrBK,EAAUL,EAAQA,EAAQM,OAAS,GACnCC,EAASd,KAAKe,kBACdC,EAAQT,EAAQU,KAAI,SAACC,EAAGC,GAC5B,IAAMC,EAAcD,EAAI,qBACRA,GADQ,mBAGxB,OACE,wBAAIE,IAAKF,GACP,4BAAQvB,QAAS,kBAAM,EAAK0B,OAAOH,KAAQC,OAI3CG,EACJT,EAAM,iBACMA,GADN,uBAEYd,KAAKM,MAAMI,QAAU,IAAM,KAE/C,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASW,EAAQX,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKyB,YAAYzB,OAGrC,yBAAKJ,UAAU,aACb,6BAAM4B,GACN,4BAAKP,O,kCAMDjB,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAErBN,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQwB,QAC1BzB,KAAKe,mBAAqBd,EAAQF,KACtCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAK0B,SACH,CACEnB,QAAQ,GAAD,mBAAMA,GAAN,CAAe,CAACN,QAASA,KAChCS,SAAUV,KAAKM,MAAMI,QACrBC,WAAYX,KAAKM,MAAMK,WAAa,O,6BAMrCgB,GACL3B,KAAK0B,SAAS,CACZf,WAAYgB,EACZjB,QAASiB,EAAO,IAAM,EACtBpB,QAASP,KAAKM,MAAMC,QAAQkB,MAAM,EAAGE,EAAO,O,wCAgB9C,IAXA,IAAM1B,EAAUD,KAAKM,MAAMC,QAAQP,KAAKM,MAAMC,QAAQM,OAAS,GAAGZ,QAC5D2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMf,OAAQd,IAAK,CAAC,IAAD,cACnB6B,EAAM7B,GADa,GAC9B8B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,S,GA3FQ1B,IAAMC,WAiGzB4B,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,U","file":"static/js/main.48329bd7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    )\n  }\n  \n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      xIsNext: true,\n      stepNumber: 0\n    }\n  }\n  \n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = this.calculateWinner();\n    const moves = history.map((_, move) => {\n      const descreption = move ?\n        `Go to move ${move}` :\n        `Go to game start`;\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{descreption}</button>\n        </li>\n      )\n    });\n    const status = (\n      winner ?\n        `Winner ${winner}` :\n        `Next player: ${this.state.xIsNext ? 'X' : 'O'}`\n    );\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ul>{moves}</ul>\n        </div>\n      </div>\n    );\n  }\n  \n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (!(this.calculateWinner() || squares[i])) {\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState(\n        {\n          history: [...history, {squares: squares}],\n          xIsNext: !this.state.xIsNext,\n          stepNumber: this.state.stepNumber + 1\n        }\n      );\n    }\n  }\n  \n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n      history: this.state.history.slice(0, step + 1)\n    });\n  }\n  \n  calculateWinner() {\n    const squares = this.state.history[this.state.history.length - 1].squares;\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}